1.Regularization by dropout
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
import tensorflow as tf
from tensorflow import keras
from sklearn.metrics import classification_report, confusion_matrix

df = pd.read_csv("/content/sonar data.csv",header=None)
print(df.head())

X = df.drop('output', axis=1)
y = df['output']
y = pd.get_dummies(y, drop_first= True)
y.head()

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=10)

model  = keras.Sequential([
    keras.layers.Dense(60, input_dim = 60, activation = 'relu'),
    keras.layers.Dropout(0.3),
    keras.layers.Dense(60, activation = 'relu'),
    keras.layers.Dropout(0.3),
    keras.layers.Dense(60, activation = 'relu'),
    keras.layers.Dropout(0.3),
    keras.layers.Dense(60, activation = 'relu'),
    keras.layers.Dropout(0.3),
    keras.layers.Dense(1, activation = 'sigmoid')])

model.compile(loss ='binary_crossentropy', optimizer = 'adam', metrics=['accuracy'])
model.fit(X_train, y_train, epochs=100, batch_size=16)

model.evaluate(X_test,y_test)
y_pred = model.predict(X_test)

print(classification_report(y_test, y_pred))
